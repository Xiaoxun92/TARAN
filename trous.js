/*
Copyright 2015 Alexandre Trofimov

This file is part of TARAN, target analysis and precision calculator.

TARAN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

TARAN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with TARAN.  If not, see <http://www.gnu.org/licenses/>.
*/

var RAYLEIGH_COEFF = [null,null,1.1283791671,1.0638460811,1.0423520254,1.0316609528,1.0252728978,1.0210274432,1.01800217,1.0157374238,1.0139785698,1.0125731934,1.0114244997,1.0104680697,1.0096593716,1.0089666378,1.0083665982,1.0078418172,1.0073789736,1.0069677146,1.0065998725,1.0062689174,1.0059695662,1.0056974987,1.0054491477,1.0052215417,1.005012186,1.0048189702,1.0046400972,1.0044740273,1.0043194333,1.0041751656,1.0040402231,1.0039137298,1.0037949164,1.0036831041,1.0035776918,1.0034781454,1.0033839884,1.0032947947,1.0032101821,1.0031298063,1.003053357,1.0029805532,1.0029111404,1.002844887,1.0027815821,1.0027210331,1.002663064,1.0026075132,1.0025542327,1.0025030858,1.0024539471,1.0024067006,1.0023612389,1.0023174629,1.0022752805,1.0022346062,1.0021953606,1.0021574697,1.0021208646,1.0020854808,1.0020512583,1.0020181409,1.0019860758,1.0019550137,1.0019249082,1.0018957159,1.0018673957,1.0018399093,1.0018132202,1.0017872944,1.0017620995,1.001737605,1.0017137822,1.0016906038,1.001668044,1.0016460783,1.0016246836,1.0016038379,1.0015835204,1.0015637112,1.0015443914,1.0015255433,1.0015071496,1.0014891942,1.0014716616,1.001454537,1.0014378064,1.0014214562,1.0014054737,1.0013898467,1.0013745633,1.0013596124,1.0013449832,1.0013306655,1.0013166494,1.0013029255,1.0012894848,1.0012763185,1.0012634183,1.0012507764,1.0012383849,1.0012262365,1.0012143242,1.001202641,1.0011911806,1.0011799365,1.0011689027,1.0011580733,1.0011474428,1.0011370056,1.0011267566,1.0011166908,1.0011068031,1.0010970891,1.001087544,1.0010781637,1.0010689437,1.0010598801,1.001050969,1.0010422064,1.0010335887,1.0010251124,1.0010167739,1.00100857,1.0010004975,1.0009925531,1.000984734,1.000977037,1.0009694594,1.0009619985,1.0009546515,1.0009474159,1.0009402892,1.0009332689,1.0009263526,1.0009195381,1.0009128231,1.0009062055,1.0008996831,1.000893254,1.000886916,1.0008806674,1.0008745063,1.0008684307,1.0008624389,1.0008565293,1.0008507001,1.0008449498,1.0008392766,1.0008336791,1.0008281558,1.0008227052,1.0008173258,1.0008120164,1.0008067755,1.0008016018,1.000796494,1.000791451,1.0007864713,1.000781554,1.0007766977,1.0007719015,1.0007671641,1.0007624845,1.0007578616,1.0007532945,1.0007487821,1.0007443234,1.0007399175,1.0007355635,1.0007312604,1.0007270073,1.0007228034,1.0007186479,1.0007145399,1.0007104786,1.0007064632,1.0007024929,1.000698567,1.0006946847,1.0006908454,1.0006870482,1.0006832926,1.0006795778,1.0006759032,1.0006722681,1.0006686719,1.0006651139,1.0006615936,1.0006581104,1.0006546637,1.0006512529,1.0006478775,1.0006445368,1.0006412304,1.0006379578,1.0006347184,1.0006315118,1.0006283374,1.0006251947,1.0006220833,1.0006190028,1.0006159525,1.0006129323,1.0006099414,1.0006069797,1.0006040465,1.0006011416,1.0005982644,1.0005954147,1.000592592,1.000589796,1.0005870262,1.0005842822,1.0005815639,1.0005788707,1.0005762023,1.0005735584,1.0005709387,1.0005683428,1.0005657704,1.0005632211,1.0005606948,1.000558191,1.0005557094,1.0005532499,1.000550812,1.0005483955,1.0005460001,1.0005436255,1.0005412716,1.0005389379,1.0005366242,1.0005343303,1.000532056,1.0005298009,1.0005275649,1.0005253476,1.000523149,1.0005209686,1.0005188064,1.000516662,1.0005145353,1.000512426,1.0005103339,1.0005082589,1.0005062006,1.000504159,1.0005021337,1.0005001247,1.0004981317,1.0004961545,1.0004941929,1.0004922468,1.0004903159,1.0004884002,1.0004864993,1.0004846132,1.0004827417,1.0004808845,1.0004790416,1.0004772128,1.0004753979,1.0004735967,1.0004718091,1.000470035,1.0004682741,1.0004665264,1.0004647917,1.0004630699,1.0004613607,1.0004596642,1.00045798,1.0004563082,1.0004546485,1.0004530009,1.0004513651,1.0004497411,1.0004481288,1.000446528,1.0004449386,1.0004433604,1.0004417934,1.0004402375,1.0004386925,1.0004371582,1.0004356347,1.0004341218,1.0004326193,1.0004311272,1.0004296453,1.0004281736,1.000426712,1.0004252603,1.0004238184,1.0004223863,1.0004209638,1.0004195509,1.0004181474,1.0004167533,1.0004153684,1.0004139928,1.0004126262,1.0004112686,1.0004099199,1.00040858,1.0004072488,1.0004059263,1.0004046124,1.0004033069,1.0004020099,1.0004007211,1.0003994406,1.0003981683,1.000396904,1.0003956477,1.0003943994,1.0003931589,1.0003919262,1.0003907011,1.0003894838,1.000388274,1.0003870716,1.0003858767,1.0003846892,1.000383509,1.0003823359,1.00038117,1.0003800112,1.0003788595,1.0003777147,1.0003765768,1.0003754457,1.0003743214,1.0003732038,1.0003720929,1.0003709885,1.0003698907,1.0003687994,1.0003677145,1.000366636,1.0003655637,1.0003644978,1.000363438,1.0003623844,1.0003613368,1.0003602953,1.0003592598,1.0003582302,1.0003572065,1.0003561887,1.0003551766,1.0003541702,1.0003531696,1.0003521746,1.0003511851,1.0003502012,1.0003492229,1.0003482499,1.0003472824,1.0003463202,1.0003453634,1.0003444118,1.0003434655,1.0003425243,1.0003415883,1.0003406574,1.0003397315,1.0003388107,1.0003378948,1.0003369839,1.0003360779,1.0003351767,1.0003342804,1.0003333888,1.000332502,1.0003316199,1.0003307424,1.0003298696,1.0003290014,1.0003281377,1.0003272786,1.0003264239,1.0003255737,1.0003247279,1.0003238865,1.0003230495,1.0003222168,1.0003213883,1.0003205641,1.0003197441,1.0003189283,1.0003181167,1.0003173091,1.0003165057,1.0003157063,1.000314911,1.0003141196,1.0003133322,1.0003125488,1.0003117692,1.0003109935,1.0003102217,1.0003094537,1.0003086895,1.0003079291,1.0003071724,1.0003064194,1.0003056701,1.0003049245,1.0003041824,1.000303444,1.0003027092,1.0003019779,1.0003012501,1.0003005258,1.0002998051,1.0002990877,1.0002983738,1.0002976633,1.0002969561,1.0002962523,1.0002955519,1.0002948547,1.0002941608,1.0002934702,1.0002927828,1.0002920987,1.0002914177,1.0002907399,1.0002900652,1.0002893937,1.0002887252,1.0002880599,1.0002873975,1.0002867383,1.000286082,1.0002854288,1.0002847785,1.0002841312,1.0002834868,1.0002828454,1.0002822068,1.0002815711,1.0002809383,1.0002803083,1.0002796811,1.0002790567,1.0002784351,1.0002778163,1.0002772002,1.0002765869,1.0002759762,1.0002753682,1.000274763,1.0002741603,1.0002735603,1.000272963,1.0002723682,1.000271776,1.0002711864,1.0002705993,1.0002700148,1.0002694328,1.0002688533,1.0002682763,1.0002677017,1.0002671296,1.00026656,1.0002659928,1.000265428,1.0002648655,1.0002643055,1.0002637478,1.0002631925,1.0002626395,1.0002620888,1.0002615404,1.0002609943,1.0002604505,1.000259909,1.0002593697,1.0002588326,1.0002582978,1.0002577651,1.0002572347,1.0002567064,1.0002561803,1.0002556564,1.0002551345,1.0002546148,1.0002540973,1.0002535818,1.0002530684,1.0002525571,1.0002520478,1.0002515406,1.0002510355,1.0002505323,1.0002500312,1.0002495321,1.0002490349,1.0002485398,1.0002480466,1.0002475553,1.000247066,1.0002465787,1.0002460932,1.0002456097,1.000245128,1.0002446483,1.0002441704,1.0002436944,1.0002432202,1.0002427479,1.0002422774,1.0002418087,1.0002413418,1.0002408768,1.0002404135,1.000239952,1.0002394922,1.0002390343,1.000238578,1.0002381235,1.0002376708,1.0002372197,1.0002367704,1.0002363228,1.0002358768,1.0002354326,1.00023499,1.000234549,1.0002341098,1.0002336721,1.0002332361,1.0002328017,1.000232369,1.0002319378,1.0002315082,1.0002310803,1.0002306539,1.000230229,1.0002298058,1.0002293841,1.0002289639,1.0002285453,1.0002281282,1.0002277126,1.0002272985,1.000226886,1.0002264749,1.0002260653,1.0002256572,1.0002252506,1.0002248454,1.0002244417,1.0002240394,1.0002236386,1.0002232392,1.0002228412,1.0002224446,1.0002220495,1.0002216557,1.0002212634,1.0002208724,1.0002204828,1.0002200946,1.0002197078,1.0002193223,1.0002189381,1.0002185553,1.0002181739,1.0002177937,1.0002174149,1.0002170374,1.0002166612,1.0002162863,1.0002159127,1.0002155404,1.0002151694,1.0002147997,1.0002144312,1.000214064,1.000213698,1.0002133333,1.0002129698,1.0002126076,1.0002122466,1.0002118868,1.0002115283,1.0002111709,1.0002108148,1.0002104598,1.0002101061,1.0002097535,1.0002094021,1.0002090519,1.0002087029,1.000208355,1.0002080083,1.0002076627,1.0002073183,1.000206975,1.0002066329,1.0002062919,1.000205952,1.0002056132,1.0002052756,1.000204939,1.0002046036,1.0002042692,1.0002039359,1.0002036038,1.0002032727,1.0002029426,1.0002026137,1.0002022858,1.000201959,1.0002016332,1.0002013085,1.0002009848,1.0002006622,1.0002003406,1.00020002,1.0001997004,1.0001993819,1.0001990644,1.0001987479,1.0001984324,1.0001981179,1.0001978044,1.0001974918,1.0001971803,1.0001968698,1.0001965602,1.0001962516,1.0001959439,1.0001956373,1.0001953316,1.0001950268,1.000194723,1.0001944201,1.0001941182,1.0001938172,1.0001935172,1.000193218,1.0001929198,1.0001926225,1.0001923262,1.0001920307,1.0001917362,1.0001914425,1.0001911497,1.0001908579,1.0001905669,1.0001902768,1.0001899876,1.0001896993,1.0001894119,1.0001891253,1.0001888396,1.0001885547,1.0001882707,1.0001879876,1.0001877053,1.0001874238,1.0001871432,1.0001868635,1.0001865846,1.0001863065,1.0001860292,1.0001857527,1.0001854771,1.0001852023,1.0001849283,1.0001846551,1.0001843828,1.0001841112,1.0001838404,1.0001835704,1.0001833012,1.0001830328,1.0001827652,1.0001824984,1.0001822323,1.000181967,1.0001817025,1.0001814388,1.0001811758,1.0001809136,1.0001806521,1.0001803914,1.0001801315,1.0001798723,1.0001796138,1.0001793561,1.0001790991,1.0001788429,1.0001785874,1.0001783326,1.0001780785,1.0001778252,1.0001775726,1.0001773207,1.0001770695,1.000176819,1.0001765692,1.0001763202,1.0001760718,1.0001758242,1.0001755772,1.0001753309,1.0001750853,1.0001748404,1.0001745962,1.0001743527,1.0001741098,1.0001738677,1.0001736262,1.0001733853,1.0001731452,1.0001729057,1.0001726668,1.0001724286,1.0001721911,1.0001719542,1.000171718,1.0001714825,1.0001712475,1.0001710132,1.0001707796,1.0001705466,1.0001703142,1.0001700825,1.0001698514,1.0001696209,1.000169391,1.0001691618,1.0001689332,1.0001687052,1.0001684778,1.000168251,1.0001680249,1.0001677993,1.0001675743,1.00016735,1.0001671263,1.0001669031,1.0001666805,1.0001664586,1.0001662372,1.0001660164,1.0001657962,1.0001655766,1.0001653576,1.0001651391,1.0001649212,1.0001647039,1.0001644872,1.000164271,1.0001640554,1.0001638404,1.0001636259,1.000163412,1.0001631987,1.0001629859,1.0001627737,1.000162562,1.0001623508,1.0001621402,1.0001619302,1.0001617207,1.0001615117,1.0001613033,1.0001610954,1.0001608881,1.0001606813,1.000160475,1.0001602692,1.000160064,1.0001598593,1.0001596551,1.0001594515,1.0001592483,1.0001590457,1.0001588436,1.000158642,1.0001584409,1.0001582404,1.0001580403,1.0001578407,1.0001576417,1.0001574431,1.0001572451,1.0001570475,1.0001568504,1.0001566539,1.0001564578,1.0001562622,1.0001560671,1.0001558725,1.0001556784,1.0001554847,1.0001552915,1.0001550989,1.0001549067,1.0001547149,1.0001545237,1.0001543329,1.0001541426,1.0001539527,1.0001537633,1.0001535744,1.000153386,1.000153198,1.0001530105,1.0001528234,1.0001526368,1.0001524506,1.0001522649,1.0001520797,1.0001518949,1.0001517105,1.0001515266,1.0001513432,1.0001511601,1.0001509776,1.0001507954,1.0001506137,1.0001504325,1.0001502517,1.0001500713,1.0001498913,1.0001497118,1.0001495327,1.000149354,1.0001491758,1.000148998,1.0001488206,1.0001486436,1.0001484671,1.0001482909,1.0001481152,1.0001479399,1.000147765,1.0001475906,1.0001474165,1.0001472429,1.0001470696,1.0001468968,1.0001467244,1.0001465523,1.0001463807,1.0001462095,1.0001460387,1.0001458683,1.0001456983,1.0001455286,1.0001453594,1.0001451906,1.0001450221,1.0001448541,1.0001446864,1.0001445191,1.0001443522,1.0001441857,1.0001440196,1.0001438538,1.0001436885,1.0001435235,1.0001433589,1.0001431947,1.0001430308,1.0001428673,1.0001427042,1.0001425415,1.0001423791,1.0001422172,1.0001420555,1.0001418943,1.0001417334,1.0001415729,1.0001414127,1.0001412529,1.0001410935,1.0001409344,1.0001407757,1.0001406173,1.0001404593,1.0001403016,1.0001401443,1.0001399874,1.0001398308,1.0001396746,1.0001395187,1.0001393631,1.0001392079,1.000139053,1.0001388985,1.0001387444,1.0001385905,1.000138437,1.0001382839,1.0001381311,1.0001379786,1.0001378265,1.0001376747,1.0001375232,1.0001373721,1.0001372213,1.0001370708,1.0001369206,1.0001367708,1.0001366213,1.0001364722,1.0001363234,1.0001361748,1.0001360267,1.0001358788,1.0001357312,1.000135584,1.0001354371,1.0001352905,1.0001351443,1.0001349983,1.0001348527,1.0001347073,1.0001345623,1.0001344176,1.0001342732,1.0001341292,1.0001339854,1.0001338419,1.0001336988,1.0001335559,1.0001334134,1.0001332711,1.0001331292,1.0001329876,1.0001328462,1.0001327052,1.0001325645,1.000132424,1.0001322839,1.000132144,1.0001320045,1.0001318652,1.0001317263,1.0001315876,1.0001314492,1.0001313111,1.0001311733,1.0001310358,1.0001308986,1.0001307617,1.000130625,1.0001304887,1.0001303526,1.0001302168,1.0001300813,1.0001299461,1.0001298111,1.0001296765,1.0001295421,1.000129408,1.0001292741,1.0001291406,1.0001290073,1.0001288743,1.0001287415,1.0001286091,1.0001284769,1.000128345,1.0001282133,1.000128082,1.0001279509,1.00012782,1.0001276895,1.0001275592,1.0001274291,1.0001272993,1.0001271698,1.0001270406,1.0001269116,1.0001267829,1.0001266544,1.0001265262,1.0001263983,1.0001262706,1.0001261432,1.000126016,1.0001258891,1.0001257624,1.000125636,1.0001255099,1.000125384,1.0001252583,1.0001251329];
var CONF_LOWER = [null,null,0.2710850307,0.3589605184,0.4152428642,0.4562422053,0.4882055078,0.5142123107,0.5360093361,0.5546821099,0.5709504514,0.5853154839,0.5981395888,0.6096929437,0.6201821079,0.6297683609,0.638579904,0.6467202284,0.6542740088,0.6613113474,0.6678908927,0.6740621719,0.679867362,0.6853426541,0.6905193177,0.6954245404,0.7000820968,0.7045128877,0.7087353772,0.712765951,0.716619211,0.7203082209,0.7238447109,0.7272392494,0.7305013892,0.7336397906,0.7366623272,0.7395761766,0.7423878983,0.7451035012,0.7477285026,0.7502679789,0.7527266104,0.7551087209,0.757418312,0.7596590937,0.7618345115,0.7639477702,0.7660018556,0.7679995534,0.7699434663,0.7718360294,0.7736795238,0.7754760891,0.7772277349,0.7789363502,0.7806037134,0.7822315,0.7838212904,0.7853745769,0.7868927699,0.7883772034,0.7898291406,0.7912497789,0.7926402535,0.7940016423,0.7953349693,0.7966412079,0.7979212846,0.7991760812,0.800406438,0.8016131563,0.8027970005,0.8039587006,0.8050989538,0.8062184265,0.8073177563,0.8083975534,0.8094584019,0.8105008616,0.8115254692,0.8125327393,0.8135231657,0.8144972227,0.8154553657,0.8163980325,0.8173256438,0.8182386046,0.8191373042,0.8200221179,0.8208934067,0.8217515188,0.8225967896,0.8234295426,0.8242500899,0.8250587328,0.8258557619,0.8266414582,0.8274160927,0.8281799279,0.828933217,0.8296762053,0.8304091299,0.8311322202,0.8318456984,0.8325497796,0.8332446722,0.833930578,0.8346076926,0.8352762059,0.8359363016,0.8365881583,0.837231949,0.8378678417,0.8384959996,0.8391165811,0.8397297398,0.8403356254,0.840934383,0.8415261538,0.842111075,0.8426892801,0.8432608989,0.8438260576,0.8443848792,0.8449374832,0.8454839861,0.8460245013,0.8465591392,0.8470880073,0.8476112105,0.8481288509,0.848641028,0.8491478388,0.8496493781,0.8501457381,0.8506370088,0.851123278,0.8516046314,0.8520811527,0.8525529235,0.8530200235,0.8534825305,0.8539405205,0.8543940678,0.8548432449,0.8552881226,0.8557287702,0.8561652554,0.8565976443,0.8570260017,0.8574503907,0.8578708733,0.85828751,0.8587003599,0.859109481,0.8595149299,0.8599167621,0.8603150318,0.8607097923,0.8611010956,0.8614889925,0.8618735329,0.8622547659,0.8626327391,0.8630074995,0.8633790931,0.8637475648,0.8641129589,0.8644753185,0.864834686,0.865191103,0.8655446103,0.8658952478,0.8662430547,0.8665880694,0.8669303297,0.8672698726,0.8676067343,0.8679409505,0.8682725561,0.8686015854,0.8689280721,0.8692520492,0.8695735492,0.8698926039,0.8702092447,0.8705235022,0.8708354066,0.8711449876,0.8714522742,0.8717572951,0.8720600784,0.8723606516,0.872659042,0.8729552761,0.8732493802,0.87354138,0.8738313008,0.8741191677,0.8744050049,0.8746888366,0.8749706865,0.8752505778,0.8755285334,0.8758045758,0.8760787272,0.8763510094,0.8766214438,0.8768900514,0.877156853,0.8774218691,0.8776851198,0.8779466247,0.8782064035,0.8784644752,0.8787208587,0.8789755725,0.879228635,0.8794800642,0.8797298778,0.8799780932,0.8802247277,0.8804697981,0.8807133211,0.8809553132,0.8811957906,0.8814347691,0.8816722646,0.8819082924,0.8821428679,0.882376006,0.8826077215,0.8828380291,0.8830669431,0.8832944777,0.8835206469,0.8837454645,0.883968944,0.8841910988,0.8844119421,0.884631487,0.8848497463,0.8850667325,0.8852824583,0.8854969359,0.8857101775,0.885922195,0.8861330002,0.8863426048,0.8865510204,0.8867582581,0.8869643293,0.8871692449,0.8873730159,0.8875756529,0.8877771667,0.8879775676,0.8881768661,0.8883750722,0.8885721961,0.8887682476,0.8889632367,0.8891571729,0.8893500658,0.8895419249,0.8897327595,0.8899225787,0.8901113917,0.8902992073,0.8904860346,0.8906718821,0.8908567586,0.8910406725,0.8912236323,0.8914056464,0.8915867228,0.8917668698,0.8919460953,0.8921244074,0.8923018137,0.892478322,0.89265394,0.8928286753,0.8930025352,0.8931755271,0.8933476584,0.8935189362,0.8936893676,0.8938589597,0.8940277193,0.8941956535,0.8943627689,0.8945290723,0.8946945702,0.8948592693,0.895023176,0.8951862968,0.8953486379,0.8955102056,0.8956710062,0.8958310457,0.8959903302,0.8961488656,0.896306658,0.896463713,0.8966200366,0.8967756345,0.8969305123,0.8970846756,0.8972381299,0.8973908808,0.8975429336,0.8976942937,0.8978449664,0.897994957,0.8981442706,0.8982929124,0.8984408875,0.8985882008,0.8987348574,0.8988808621,0.8990262199,0.8991709355,0.8993150137,0.8994584592,0.8996012768,0.899743471,0.8998850463,0.9000260074,0.9001663586,0.9003061045,0.9004452494,0.9005837976,0.9007217535,0.9008591212,0.9009959051,0.9011321092,0.9012677378,0.9014027949,0.9015372844,0.9016712106,0.9018045772,0.9019373883,0.9020696477,0.9022013592,0.9023325267,0.902463154,0.9025932448,0.9027228028,0.9028518316,0.9029803349,0.9031083163,0.9032357794,0.9033627276,0.9034891645,0.9036150935,0.903740518,0.9038654415,0.9039898672,0.9041137987,0.904237239,0.9043601915,0.9044826595,0.9046046461,0.9047261546,0.904847188,0.9049677495,0.9050878422,0.9052074691,0.9053266333,0.9054453377,0.9055635854,0.9056813794,0.9057987224,0.9059156175,0.9060320675,0.9061480753,0.9062636436,0.9063787752,0.906493473,0.9066077397,0.906721578,0.9068349906,0.9069479802,0.9070605493,0.9071727007,0.907284437,0.9073957607,0.9075066744,0.9076171806,0.9077272819,0.9078369806,0.9079462794,0.9080551806,0.9081636867,0.9082718001,0.9083795232,0.9084868583,0.9085938077,0.9087003739,0.9088065591,0.9089123656,0.9090177957,0.9091228516,0.9092275355,0.9093318497,0.9094357963,0.9095393776,0.9096425956,0.9097454526,0.9098479506,0.9099500918,0.9100518781,0.9101533118,0.9102543948,0.9103551293,0.9104555171,0.9105555603,0.9106552609,0.9107546209,0.9108536422,0.9109523267,0.9110506764,0.9111486932,0.911246379,0.9113437356,0.911440765,0.9115374689,0.9116338492,0.9117299077,0.9118256462,0.9119210665,0.9120161704,0.9121109596,0.912205436,0.9122996011,0.9123934568,0.9124870048,0.9125802466,0.9126731841,0.9127658189,0.9128581527,0.912950187,0.9130419236,0.913133364,0.9132245098,0.9133153627,0.9134059241,0.9134961958,0.9135861792,0.9136758759,0.9137652874,0.9138544152,0.9139432609,0.914031826,0.9141201119,0.9142081201,0.9142958521,0.9143833093,0.9144704932,0.9145574052,0.9146440467,0.9147304192,0.9148165241,0.9149023627,0.9149879364,0.9150732466,0.9151582947,0.915243082,0.9153276098,0.9154118795,0.9154958925,0.9155796499,0.9156631532,0.9157464036,0.9158294024,0.9159121509,0.9159946504,0.916076902,0.9161589071,0.9162406669,0.9163221826,0.9164034555,0.9164844868,0.9165652776,0.9166458291,0.9167261427,0.9168062193,0.9168860603,0.9169656668,0.9170450399,0.9171241807,0.9172030905,0.9172817703,0.9173602213,0.9174384446,0.9175164413,0.9175942125,0.9176717593,0.9177490827,0.917826184,0.917903064,0.917979724,0.9180561649,0.9181323879,0.9182083938,0.9182841839,0.9183597591,0.9184351204,0.9185102688,0.9185852054,0.9186599312,0.9187344472,0.9188087543,0.9188828535,0.9189567458,0.9190304322,0.9191039136,0.9191771911,0.9192502654,0.9193231377,0.9193958088,0.9194682796,0.9195405512,0.9196126243,0.9196844999,0.919756179,0.9198276624,0.919898951,0.9199700458,0.9200409475,0.9201116571,0.9201821755,0.9202525035,0.920322642,0.9203925918,0.9204623538,0.9205319288,0.9206013177,0.9206705213,0.9207395405,0.920808376,0.9208770288,0.9209454995,0.921013789,0.9210818982,0.9211498277,0.9212175785,0.9212851513,0.9213525468,0.9214197659,0.9214868094,0.9215536779,0.9216203724,0.9216868934,0.9217532419,0.9218194185,0.921885424,0.9219512591,0.9220169246,0.9220824212,0.9221477496,0.9222129106,0.9222779048,0.922342733,0.922407396,0.9224718943,0.9225362288,0.9226004001,0.9226644088,0.9227282558,0.9227919417,0.9228554671,0.9229188327,0.9229820393,0.9230450874,0.9231079778,0.9231707112,0.9232332881,0.9232957092,0.9233579752,0.9234200867,0.9234820443,0.9235438488,0.9236055008,0.9236670007,0.9237283494,0.9237895475,0.9238505954,0.923911494,0.9239722437,0.9240328451,0.924093299,0.9241536059,0.9242137664,0.924273781,0.9243336505,0.9243933753,0.9244529561,0.9245123934,0.9245716878,0.92463084,0.9246898504,0.9247487196,0.9248074483,0.9248660369,0.9249244861,0.9249827963,0.9250409682,0.9250990023,0.9251568991,0.9252146592,0.9252722831,0.9253297714,0.9253871246,0.9254443432,0.9255014278,0.9255583788,0.9256151969,0.9256718825,0.9257284361,0.9257848584,0.9258411496,0.9258973105,0.9259533415,0.9260092431,0.9260650157,0.92612066,0.9261761764,0.9262315653,0.9262868273,0.9263419629,0.9263969726,0.9264518567,0.9265066159,0.9265612506,0.9266157612,0.9266701483,0.9267244123,0.9267785536,0.9268325728,0.9268864703,0.9269402465,0.926993902,0.9270474371,0.9271008524,0.9271541483,0.9272073251,0.9272603834,0.9273133237,0.9273661463,0.9274188517,0.9274714403,0.9275239125,0.9275762689,0.9276285098,0.9276806356,0.9277326468,0.9277845438,0.9278363271,0.9278879969,0.9279395538,0.9279909982,0.9280423305,0.928093551,0.9281446602,0.9281956586,0.9282465464,0.9282973242,0.9283479922,0.928398551,0.9284490008,0.9284993421,0.9285495754,0.9285997009,0.928649719,0.9286996302,0.9287494348,0.9287991333,0.9288487259,0.9288982131,0.9289475952,0.9289968727,0.9290460458,0.929095115,0.9291440806,0.9291929431,0.9292417027,0.9292903598,0.9293389147,0.929387368,0.9294357198,0.9294839706,0.9295321207,0.9295801704,0.9296281202,0.9296759703,0.9297237212,0.9297713731,0.9298189264,0.9298663814,0.9299137385,0.9299609981,0.9300081603,0.9300552257,0.9301021945,0.9301490671,0.9301958438,0.9302425248,0.9302891107,0.9303356015,0.9303819978,0.9304282998,0.9304745079,0.9305206223,0.9305666434,0.9306125714,0.9306584068,0.9307041498,0.9307498008,0.93079536,0.9308408277,0.9308862043,0.9309314901,0.9309766853,0.9310217904,0.9310668055,0.9311117309,0.9311565671,0.9312013142,0.9312459727,0.9312905426,0.9313350245,0.9313794185,0.9314237249,0.9314679441,0.9315120763,0.9315561218,0.9316000809,0.9316439539,0.931687741,0.9317314426,0.9317750589,0.9318185902,0.9318620368,0.9319053989,0.9319486769,0.931991871,0.9320349815,0.9320780086,0.9321209526,0.9321638138,0.9322065925,0.9322492889,0.9322919033,0.9323344359,0.9323768871,0.932419257,0.932461546,0.9325037542,0.9325458821,0.9325879297,0.9326298974,0.9326717854,0.932713594,0.9327553235,0.932796974,0.9328385458,0.9328800392,0.9329214545,0.9329627918,0.9330040514,0.9330452336,0.9330863386,0.9331273667,0.933168318,0.9332091929,0.9332499916,0.9332907143,0.9333313612,0.9333719326,0.9334124287,0.9334528498,0.933493196,0.9335334677,0.933573665,0.9336137882,0.9336538376,0.9336938132,0.9337337154,0.9337735444,0.9338133005,0.9338529837,0.9338925944,0.9339321328,0.9339715992,0.9340109936,0.9340503164,0.9340895677,0.9341287479,0.934167857,0.9342068953,0.9342458631,0.9342847605,0.9343235878,0.9343623452,0.9344010328,0.9344396509,0.9344781997,0.9345166794,0.9345550902,0.9345934324,0.9346317061,0.9346699115,0.9347080488,0.9347461183,0.9347841201,0.9348220545,0.9348599216,0.9348977217,0.9349354549,0.9349731214,0.9350107215,0.9350482553,0.9350857231,0.9351231249,0.9351604611,0.9351977318,0.9352349372,0.9352720775,0.9353091529,0.9353461636,0.9353831098,0.9354199916,0.9354568092,0.9354935629,0.9355302528,0.9355668791,0.9356034419,0.9356399416,0.9356763782,0.935712752,0.935749063,0.9357853116,0.9358214978,0.9358576219,0.9358936841,0.9359296845,0.9359656232,0.9360015005,0.9360373166,0.9360730716,0.9361087657,0.9361443991,0.9361799719,0.9362154843,0.9362509365,0.9362863287,0.936321661,0.9363569336,0.9363921467,0.9364273004,0.9364623949,0.9364974304,0.9365324071,0.936567325,0.9366021844,0.9366369854,0.9366717282,0.936706413,0.93674104,0.9367756092,0.9368101208,0.9368445751,0.9368789721,0.936913312,0.936947595,0.9369818213,0.937015991,0.9370501042,0.9370841612,0.937118162,0.9371521068,0.9371859958,0.9372198292,0.937253607,0.9372873295,0.9373209967,0.9373546089,0.9373881662,0.9374216688,0.9374551167,0.9374885102,0.9375218493,0.9375551343,0.9375883653,0.9376215424,0.9376546658,0.9376877356,0.937720752,0.9377537151,0.9377866251,0.9378194821,0.9378522862,0.9378850376,0.9379177364,0.9379503828,0.9379829769,0.9380155189,0.9380480089,0.9380804469,0.9381128333,0.9381451681,0.9381774514,0.9382096834,0.9382418642,0.938273994,0.9383060728,0.9383381009,0.9383700784,0.9384020053,0.9384338819,0.9384657083,0.9384974845,0.9385292108,0.9385608872,0.9385925139,0.9386240911,0.9386556187,0.9386870971,0.9387185263,0.9387499064,0.9387812376,0.93881252,0.9388437537,0.9388749388,0.9389060756,0.938937164,0.9389682043,0.9389991965,0.9390301408,0.9390610373,0.9390918861,0.9391226874,0.9391534412,0.9391841477,0.9392148071,0.9392454194,0.9392759847,0.9393065032,0.9393369751,0.9393674003,0.9393977791,0.9394281115,0.9394583977,0.9394886378,0.939518832,0.9395489802,0.9395790827,0.9396091395,0.9396391509,0.9396691168,0.9396990374,0.9397289129,0.9397587433,0.9397885287,0.9398182693,0.9398479652,0.9398776165,0.9399072232,0.9399367856,0.9399663037,0.9399957777,0.9400252076,0.9400545935,0.9400839357,0.9401132341,0.9401424889,0.9401717001,0.940200868,0.9402299926,0.940259074,0.9402881124,0.9403171078,0.9403460603,0.94037497,0.9404038372,0.9404326617,0.9404614439,0.9404901837,0.9405188812,0.9405475367,0.9405761501,0.9406047216,0.9406332513,0.9406617393,0.9406901857,0.9407185906,0.940746954,0.9407752762];
var CONF_UPPER = [null,null,39.4978902052,8.2573219821,4.8490951652,3.6701780759,3.0797917558,2.7249264993,2.4872412947,2.3162677254,2.1869220085,2.0853366919,2.0032195865,1.9353043532,1.8780828122,1.829125625,1.7866956639,1.7495167732,1.7166295969,1.6872984553,1.6609493346,1.6371274863,1.6154677518,1.595673361,1.577500504,1.560746918,1.5452433168,1.5308468692,1.5174361735,1.5049073425,1.4931709207,1.4821494353,1.4717754317,1.4619898864,1.4527409136,1.443982705,1.4356746544,1.4277806298,1.420268366,1.4131089542,1.4062764105,1.39974731,1.3935004753,1.3875167095,1.3817785665,1.3762701529,1.370976957,1.365885699,1.3609842016,1.3562612759,1.3517066217,1.3473107396,1.3430648534,1.3389608415,1.3349911763,1.3311488696,1.3274274246,1.3238207926,1.3203233347,1.3169297867,1.3136352283,1.3104350547,1.3073249518,1.3043008725,1.3013590168,1.2984958121,1.2957078969,1.2929921046,1.2903454496,1.2877651145,1.2852484377,1.282792903,1.2803961295,1.2780558625,1.2757699652,1.2735364105,1.2713532745,1.2692187297,1.2671310387,1.2650885488,1.263089687,1.2611329548,1.2592169239,1.2573402321,1.2555015796,1.253699725,1.2519334823,1.2502017178,1.248503347,1.2468373321,1.2452026793,1.2435984366,1.2420236915,1.2404775689,1.2389592293,1.2374678667,1.2360027074,1.2345630078,1.2331480534,1.2317571569,1.2303896573,1.2290449186,1.2277223281,1.2264212962,1.2251412544,1.2238816548,1.2226419694,1.2214216886,1.2202203207,1.2190373912,1.2178724419,1.2167250302,1.2155947285,1.2144811233,1.2133838151,1.2123024173,1.2112365561,1.2101858695,1.2091500072,1.2081286301,1.2071214096,1.2061280274,1.2051481751,1.2041815537,1.2032278731,1.2022868522,1.2013582182,1.2004417064,1.1995370597,1.1986440288,1.1977623713,1.196891852,1.1960322422,1.1951833198,1.1943448688,1.1935166793,1.1926985472,1.1918902738,1.1910916661,1.1903025361,1.1895227008,1.1887519822,1.1879902069,1.1872372061,1.1864928152,1.1857568742,1.1850292269,1.1843097212,1.1835982088,1.1828945452,1.1821985893,1.1815102037,1.1808292543,1.1801556103,1.179489144,1.1788297308,1.1781772492,1.1775315804,1.1768926085,1.1762602203,1.1756343053,1.1750147554,1.1744014652,1.1737943316,1.1731932537,1.1725981332,1.1720088736,1.171425381,1.1708475632,1.1702753302,1.1697085941,1.1691472685,1.1685912694,1.1680405141,1.167494922,1.1669544142,1.1664189133,1.1658883435,1.1653626309,1.1648417027,1.1643254879,1.163813917,1.1633069216,1.162804435,1.1623063916,1.1618127274,1.1613233794,1.160838286,1.1603573868,1.1598806225,1.159407935,1.1589392675,1.158474564,1.1580137697,1.157556831,1.157103695,1.1566543101,1.1562086255,1.1557665915,1.1553281591,1.1548932804,1.1544619082,1.1540339964,1.1536094996,1.1531883731,1.1527705733,1.1523560572,1.1519447825,1.1515367079,1.1511317925,1.1507299964,1.1503312803,1.1499356055,1.1495429341,1.1491532288,1.1487664529,1.1483825704,1.1480015459,1.1476233446,1.1472479322,1.146875275,1.1465053401,1.1461380947,1.145773507,1.1454115454,1.145052179,1.1446953773,1.1443411103,1.1439893485,1.1436400631,1.1432932253,1.1429488071,1.1426067809,1.1422671195,1.1419297961,1.1415947842,1.1412620581,1.1409315921,1.1406033611,1.1402773403,1.1399535054,1.1396318323,1.1393122974,1.1389948774,1.1386795494,1.1383662907,1.1380550792,1.1377458928,1.1374387101,1.1371335097,1.1368302706,1.1365289722,1.1362295942,1.1359321164,1.1356365192,1.135342783,1.1350508885,1.134760817,1.1344725496,1.1341860681,1.1339013542,1.1336183901,1.1333371582,1.133057641,1.1327798215,1.1325036826,1.1322292079,1.1319563806,1.1316851848,1.1314156043,1.1311476234,1.1308812266,1.1306163984,1.1303531236,1.1300913875,1.1298311751,1.129572472,1.1293152638,1.1290595363,1.1288052755,1.1285524677,1.1283010991,1.1280511564,1.1278026263,1.1275554957,1.1273097516,1.1270653813,1.1268223721,1.1265807117,1.1263403878,1.1261013881,1.1258637008,1.1256273139,1.1253922159,1.1251583952,1.1249258404,1.1246945402,1.1244644836,1.1242356595,1.1240080571,1.1237816657,1.1235564747,1.1233324737,1.1231096524,1.1228880004,1.1226675079,1.1224481647,1.1222299611,1.1220128874,1.1217969339,1.1215820911,1.1213683496,1.1211557003,1.1209441338,1.1207336413,1.1205242136,1.1203158419,1.1201085176,1.1199022319,1.1196969763,1.1194927424,1.1192895218,1.1190873062,1.1188860875,1.1186858576,1.1184866085,1.1182883323,1.1180910212,1.1178946676,1.1176992636,1.1175048019,1.117311275,1.1171186754,1.1169269958,1.1167362291,1.1165463681,1.1163574057,1.1161693349,1.1159821488,1.1157958406,1.1156104035,1.1154258308,1.115242116,1.1150592523,1.1148772334,1.1146960528,1.1145157042,1.1143361813,1.1141574779,1.1139795878,1.113802505,1.1136262234,1.1134507371,1.1132760401,1.1131021267,1.112928991,1.1127566273,1.1125850301,1.1124141935,1.1122441123,1.1120747807,1.1119061934,1.1117383451,1.1115712303,1.1114048438,1.1112391804,1.111074235,1.1109100024,1.1107464775,1.1105836553,1.1104215308,1.1102600993,1.1100993556,1.1099392952,1.109779913,1.1096212046,1.109463165,1.1093057898,1.1091490743,1.108993014,1.1088376043,1.1086828409,1.1085287192,1.1083752349,1.1082223837,1.1080701612,1.1079185633,1.1077675856,1.1076172241,1.1074674745,1.1073183328,1.107169795,1.1070218569,1.1068745146,1.1067277643,1.1065816018,1.1064360234,1.1062910253,1.1061466036,1.1060027545,1.1058594743,1.1057167594,1.105574606,1.1054330105,1.1052919693,1.1051514788,1.1050115355,1.1048721359,1.1047332765,1.1045949539,1.1044571646,1.1043199052,1.1041831725,1.104046963,1.1039112735,1.1037761007,1.1036414414,1.1035072923,1.1033736503,1.1032405122,1.1031078749,1.1029757353,1.1028440903,1.1027129369,1.102582272,1.1024520927,1.1023223959,1.1021931788,1.1020644384,1.1019361717,1.1018083761,1.1016810485,1.1015541861,1.1014277863,1.1013018461,1.1011763629,1.1010513339,1.1009267563,1.1008026276,1.1006789451,1.100555706,1.1004329079,1.100310548,1.1001886238,1.1000671329,1.0999460725,1.0998254402,1.0997052336,1.0995854501,1.0994660873,1.0993471427,1.099228614,1.0991104987,1.0989927945,1.098875499,1.0987586099,1.0986421248,1.0985260415,1.0984103577,1.098295071,1.0981801794,1.0980656804,1.097951572,1.0978378519,1.0977245179,1.0976115679,1.0974989998,1.0973868113,1.0972750005,1.0971635652,1.0970525033,1.0969418128,1.0968314916,1.0967215377,1.0966119491,1.0965027237,1.0963938596,1.0962853549,1.0961772075,1.0960694156,1.0959619771,1.0958548903,1.0957481531,1.0956417638,1.0955357204,1.0954300211,1.095324664,1.0952196474,1.0951149694,1.0950106282,1.094906622,1.0948029491,1.0946996076,1.0945965959,1.0944939122,1.0943915548,1.094289522,1.0941878121,1.0940864233,1.0939853541,1.0938846028,1.0937841677,1.0936840471,1.0935842395,1.0934847433,1.0933855568,1.0932866784,1.0931881067,1.0930898399,1.0929918766,1.0928942152,1.0927968541,1.092699792,1.0926030271,1.0925065581,1.0924103834,1.0923145016,1.0922189112,1.0921236107,1.0920285987,1.0919338738,1.0918394344,1.0917452793,1.0916514069,1.0915578159,1.0914645049,1.0913714725,1.0912787173,1.0911862381,1.0910940333,1.0910021017,1.090910442,1.0908190527,1.0907279327,1.0906370806,1.090546495,1.0904561748,1.0903661186,1.0902763251,1.0901867932,1.0900975214,1.0900085086,1.0899197536,1.0898312551,1.0897430119,1.0896550227,1.0895672864,1.0894798018,1.0893925676,1.0893055828,1.089218846,1.0891323563,1.0890461123,1.0889601129,1.0888743571,1.0887888436,1.0887035713,1.0886185391,1.088533746,1.0884491907,1.0883648721,1.0882807893,1.0881969411,1.0881133264,1.0880299441,1.0879467932,1.0878638727,1.0877811814,1.0876987183,1.0876164824,1.0875344727,1.0874526881,1.0873711275,1.0872897901,1.0872086748,1.0871277806,1.0870471064,1.0869666513,1.0868864144,1.0868063946,1.086726591,1.0866470026,1.0865676285,1.0864884676,1.0864095191,1.0863307821,1.0862522555,1.0861739384,1.08609583,1.0860179293,1.0859402354,1.0858627474,1.0857854644,1.0857083855,1.0856315098,1.0855548364,1.0854783645,1.0854020932,1.0853260215,1.0852501487,1.0851744739,1.0850989962,1.0850237148,1.0849486289,1.0848737375,1.08479904,1.0847245353,1.0846502228,1.0845761016,1.0845021709,1.0844284299,1.0843548777,1.0842815137,1.0842083369,1.0841353466,1.084062542,1.0839899224,1.0839174869,1.0838452349,1.0837731654,1.0837012778,1.0836295713,1.0835580451,1.0834866986,1.0834155309,1.0833445413,1.0832737291,1.0832030935,1.0831326339,1.0830623495,1.0829922395,1.0829223033,1.0828525402,1.0827829494,1.0827135302,1.082644282,1.082575204,1.0825062956,1.0824375561,1.0823689847,1.0823005809,1.0822323439,1.082164273,1.0820963676,1.0820286271,1.0819610507,1.0818936379,1.0818263879,1.0817593001,1.0816923738,1.0816256085,1.0815590035,1.0814925581,1.0814262717,1.0813601437,1.0812941735,1.0812283604,1.0811627038,1.0810972032,1.0810318578,1.0809666671,1.0809016305,1.0808367473,1.0807720171,1.0807074391,1.0806430129,1.0805787377,1.0805146131,1.0804506384,1.080386813,1.0803231365,1.0802596082,1.0801962275,1.0801329938,1.0800699067,1.0800069656,1.0799441698,1.0798815189,1.0798190122,1.0797566493,1.0796944296,1.0796323526,1.0795704176,1.0795086242,1.0794469719,1.0793854601,1.0793240882,1.0792628558,1.0792017623,1.0791408072,1.07907999,1.0790193102,1.0789587673,1.0788983607,1.0788380899,1.0787779545,1.0787179539,1.0786580877,1.0785983553,1.0785387562,1.07847929,1.0784199562,1.0783607543,1.0783016837,1.0782427441,1.0781839349,1.0781252556,1.0780667058,1.0780082851,1.0779499929,1.0778918287,1.0778337922,1.0777758828,1.0777181001,1.0776604436,1.0776029129,1.0775455076,1.0774882271,1.077431071,1.0773740389,1.0773171303,1.0772603448,1.0772036819,1.0771471413,1.0770907224,1.0770344249,1.0769782483,1.0769221922,1.0768662561,1.0768104396,1.0767547424,1.0766991639,1.0766437039,1.0765883617,1.0765331371,1.0764780296,1.0764230389,1.0763681644,1.0763134059,1.0762587628,1.0762042348,1.0761498215,1.0760955226,1.0760413375,1.0759872659,1.0759333074,1.0758794616,1.0758257282,1.0757721067,1.0757185967,1.075665198,1.07561191,1.0755587324,1.0755056649,1.075452707,1.0753998584,1.0753471187,1.0752944876,1.0752419646,1.0751895494,1.0751372417,1.075085041,1.0750329471,1.0749809595,1.0749290779,1.0748773019,1.0748256312,1.0747740654,1.0747226042,1.0746712472,1.0746199941,1.0745688445,1.0745177981,1.0744668546,1.0744160135,1.0743652746,1.0743146375,1.0742641018,1.0742136674,1.0741633337,1.0741131005,1.0740629674,1.0740129341,1.0739630004,1.0739131657,1.07386343,1.0738137927,1.0737642536,1.0737148124,1.0736654687,1.0736162222,1.0735670727,1.0735180197,1.073469063,1.0734202023,1.0733714372,1.0733227675,1.0732741929,1.0732257129,1.0731773274,1.073129036,1.0730808385,1.0730327344,1.0729847236,1.0729368057,1.0728889804,1.0728412474,1.0727936065,1.0727460573,1.0726985996,1.072651233,1.0726039573,1.0725567722,1.0725096773,1.0724626725,1.0724157574,1.0723689317,1.0723221952,1.0722755475,1.0722289885,1.0721825178,1.0721361351,1.0720898402,1.0720436327,1.0719975125,1.0719514793,1.0719055327,1.0718596725,1.0718138984,1.0717682103,1.0717226077,1.0716770905,1.0716316583,1.0715863109,1.0715410481,1.0714958696,1.0714507751,1.0714057644,1.0713608372,1.0713159933,1.0712712323,1.0712265542,1.0711819585,1.071137445,1.0710930135,1.0710486638,1.0710043956,1.0709602086,1.0709161026,1.0708720774,1.0708281327,1.0707842683,1.0707404838,1.0706967792,1.0706531541,1.0706096083,1.0705661416,1.0705227537,1.0704794444,1.0704362134,1.0703930606,1.0703499856,1.0703069883,1.0702640685,1.0702212258,1.0701784601,1.0701357711,1.0700931586,1.0700506225,1.0700081623,1.069965778,1.0699234693,1.069881236,1.0698390779,1.0697969947,1.0697549862,1.0697130522,1.0696711925,1.0696294068,1.069587695,1.0695460569,1.0695044921,1.0694630006,1.069421582,1.0693802362,1.069338963,1.0692977621,1.0692566334,1.0692155766,1.0691745916,1.0691336781,1.0690928359,1.0690520647,1.0690113645,1.068970735,1.068930176,1.0688896873,1.0688492687,1.06880892,1.068768641,1.0687284314,1.0686882912,1.06864822,1.0686082178,1.0685682843,1.0685284192,1.0684886225,1.0684488939,1.0684092333,1.0683696403,1.068330115,1.0682906569,1.0682512661,1.0682119422,1.0681726851,1.0681334946,1.0680943705,1.0680553127,1.0680163209,1.0679773949,1.0679385347,1.0678997399,1.0678610104,1.067822346,1.0677837466,1.067745212,1.0677067419,1.0676683362,1.0676299948,1.0675917174,1.0675535039,1.0675153541,1.0674772678,1.0674392449,1.0674012851,1.0673633883,1.0673255544,1.0672877831,1.0672500742,1.0672124277,1.0671748433,1.0671373209,1.0670998603,1.0670624614,1.0670251239,1.0669878477,1.0669506326,1.0669134785,1.0668763852,1.0668393525,1.0668023803,1.0667654684,1.0667286166,1.0666918249,1.0666550929,1.0666184206,1.0665818078,1.0665452544,1.0665087601,1.0664723249,1.0664359485,1.0663996308,1.0663633717,1.066327171,1.0662910285,1.0662549441,1.0662189177,1.066182949,1.0661470379,1.0661111843,1.066075388,1.0660396489,1.0660039668,1.0659683416,1.0659327731,1.0658972611,1.0658618056,1.0658264063,1.0657910632,1.065755776,1.0657205446,1.065685369,1.0656502489,1.0656151841,1.0655801746,1.0655452202,1.0655103208,1.0654754762,1.0654406862,1.0654059508,1.0653712698,1.065336643,1.0653020703,1.0652675516,1.0652330868,1.0651986756,1.0651643179,1.0651300137,1.0650957628,1.065061565,1.0650274202]; 
var TDIST_QUANTILE = [null,null,25.4516995794,6.2053468166,4.1765348461,3.4954059325,3.1633814497,2.9686866842,2.8412442486,2.7515235961,2.6850108468,2.6337669157,2.5930926825,2.5600329594,2.5326378147,2.5095694115,2.4898797035,2.4728783225,2.4580507204,2.4450056165,2.4334402114,2.4231165399,2.4138450166,2.4054727463,2.3978750647,2.3909493151,2.3846102008,2.3787862662,2.3734172009,2.3684517492,2.3638460732,2.3595624587,2.3555682822,2.3518351804,2.3483383773,2.3450561343,2.3419692993,2.3390609326,2.3363159969,2.3337210977,2.3312642647,2.3289347676,2.3267229597,2.3246201445,2.3226184613,2.3207107877,2.3188906544,2.3171521722,2.3154899685,2.313899132,2.3123751638,2.3109139356,2.3095116517,2.3081648168,2.3068702062,2.3056248408,2.3044259636,2.3032710196,2.3021576378,2.3010836145,2.3000468994,2.299045582,2.2980778799,2.2971421286,2.2962367715,2.2953603517,2.2945115038,2.293688947,2.2928914785,2.292117968,2.2913673518,2.2906386286,2.2899308542,2.2892431383,2.2885746401,2.2879245653,2.2872921628,2.2866767215,2.2860775683,2.2854940649,2.2849256063,2.2843716179,2.2838315544,2.2833048971,2.2827911531,2.2822898532,2.2818005507,2.2813228201,2.2808562556,2.2804004704,2.2799550951,2.2795197772,2.2790941798,2.278677981,2.2782708728,2.2778725607,2.2774827625,2.2771012084,2.2767276394,2.2763618074,2.2760034748,2.275652413,2.2753084032,2.2749712349,2.2746407061,2.2743166226,2.2739987976,2.2736870517,2.273381212,2.2730811124,2.2727865927,2.2724974987,2.2722136819,2.2719349991,2.2716613122,2.2713924882,2.2711283985,2.2708689191,2.2706139305,2.270363317,2.2701169669,2.2698747725,2.2696366294,2.2694024369,2.2691720973,2.2689455166,2.2687226032,2.2685032691,2.2682874285,2.2680749988,2.2678658998,2.2676600536,2.267457385,2.2672578209,2.2670612906,2.2668677255,2.2666770588,2.2664892261,2.2663041646,2.2661218133,2.2659421133,2.2657650071,2.2655904389,2.2654183546,2.2652487015,2.2650814285,2.2649164859,2.2647538253,2.2645933996,2.2644351631,2.2642790713,2.264125081,2.2639731498,2.2638232369,2.2636753022,2.2635293069,2.2633852131,2.2632429839,2.2631025832,2.2629639761,2.2628271285,2.262692007,2.2625585791,2.2624268134,2.2622966787,2.2621681452,2.2620411833,2.2619157645,2.2617918608,2.2616694449,2.2615484902,2.2614289706,2.2613108608,2.261194136,2.2610787719,2.260964745,2.260852032,2.2607406104,2.2606304581,2.2605215537,2.2604138759,2.2603074042,2.2602021184,2.2600979988,2.2599950262,2.2598931817,2.2597924469,2.2596928037,2.2595942344,2.2594967219,2.2594002492,2.2593047998,2.2592103574,2.2591169063,2.2590244309,2.2589329159,2.2588423466,2.2587527083,2.2586639867,2.2585761679,2.2584892381,2.2584031839,2.2583179922,2.25823365,2.2581501448,2.258067464,2.2579855956,2.2579045277,2.2578242485,2.2577447466,2.2576660108,2.25758803,2.2575107935,2.2574342906,2.257358511,2.2572834444,2.2572090808,2.2571354103,2.2570624235,2.2569901106,2.2569184626,2.2568474702,2.2567771245,2.2567074166,2.2566383381,2.2565698803,2.2565020349,2.2564347938,2.2563681489,2.2563020924,2.2562366164,2.2561717134,2.2561073758,2.2560435964,2.2559803678,2.255917683,2.2558555349,2.2557939168,2.2557328219,2.2556722435,2.2556121751,2.2555526103,2.2554935428,2.2554349664,2.255376875,2.2553192626,2.2552621232,2.2552054512,2.2551492407,2.2550934862,2.2550381822,2.2549833231,2.2549289037,2.2548749187,2.2548213629,2.2547682312,2.2547155186,2.2546632202,2.254611331,2.2545598464,2.2545087615,2.2544580718,2.2544077727,2.2543578597,2.2543083283,2.2542591742,2.2542103932,2.2541619809,2.2541139332,2.2540662461,2.2540189154,2.2539719372,2.2539253075,2.2538790225,2.2538330785,2.2537874715,2.253742198,2.2536972543,2.2536526368,2.253608342,2.2535643664,2.2535207064,2.2534773589,2.2534343203,2.2533915875,2.2533491572,2.2533070261,2.2532651911,2.2532236491,2.2531823971,2.253141432,2.2531007509,2.2530603507,2.2530202286,2.2529803817,2.2529408073,2.2529015024,2.2528624645,2.2528236907,2.2527851784,2.252746925,2.2527089278,2.2526711843,2.252633692,2.2525964483,2.2525594508,2.2525226971,2.2524861847,2.2524499114,2.2524138746,2.2523780723,2.252342502,2.2523071615,2.2522720486,2.2522371611,2.2522024968,2.2521680537,2.2521338295,2.2520998223,2.2520660299,2.2520324504,2.2519990816,2.2519659218,2.2519329688,2.2519002207,2.2518676758,2.251835332,2.2518031875,2.2517712404,2.2517394891,2.2517079316,2.2516765662,2.2516453912,2.2516144048,2.2515836053,2.251552991,2.2515225603,2.2514923115,2.251462243,2.2514323532,2.2514026404,2.2513731033,2.25134374,2.2513145493,2.2512855294,2.251256679,2.2512279965,2.2511994806,2.2511711297,2.2511429423,2.2511149172,2.2510870529,2.2510593481,2.2510318013,2.2510044112,2.2509771765,2.2509500958,2.2509231679,2.2508963915,2.2508697653,2.250843288,2.2508169584,2.2507907752,2.2507647373,2.2507388435,2.2507130924,2.2506874831,2.2506620142,2.2506366847,2.2506114933,2.2505864391,2.2505615208,2.2505367373,2.2505120877,2.2504875707,2.2504631853,2.2504389305,2.2504148052,2.2503908084,2.250366939,2.2503431961,2.2503195786,2.2502960856,2.250272716,2.2502494689,2.2502263434,2.2502033385,2.2501804531,2.2501576866,2.2501350378,2.2501125058,2.2500900899,2.250067789,2.2500456024,2.2500235291,2.2500015682,2.2499797189,2.2499579804,2.2499363518,2.2499148323,2.2498934211,2.2498721172,2.2498509201,2.2498298287,2.2498088425,2.2497879604,2.2497671819,2.2497465061,2.2497259323,2.2497054596,2.2496850875,2.249664815,2.2496446416,2.2496245664,2.2496045888,2.2495847081,2.2495649235,2.2495452343,2.2495256399,2.2495061396,2.2494867327,2.2494674185,2.2494481964,2.2494290657,2.2494100257,2.2493910759,2.2493722155,2.2493534441,2.2493347608,2.2493161651,2.2492976564,2.2492792341,2.2492608976,2.2492426462,2.2492244795,2.2492063967,2.2491883973,2.2491704808,2.2491526466,2.249134894,2.2491172226,2.2490996318,2.249082121,2.2490646898,2.2490473374,2.2490300635,2.2490128675,2.2489957489,2.2489787071,2.2489617416,2.2489448519,2.2489280376,2.248911298,2.2488946328,2.2488780413,2.2488615232,2.2488450779,2.248828705,2.248812404,2.2487961744,2.2487800157,2.2487639275,2.2487479093,2.2487319606,2.2487160811,2.2487002703,2.2486845276,2.2486688527,2.2486532452,2.2486377046,2.2486222304,2.2486068223,2.2485914799,2.2485762026,2.2485609901,2.2485458421,2.2485307579,2.2485157374,2.2485007801,2.2484858855,2.2484710533,2.248456283,2.2484415744,2.248426927,2.2484123404,2.2483978143,2.2483833483,2.2483689419,2.248354595,2.2483403069,2.2483260775,2.2483119064,2.2482977931,2.2482837374,2.2482697389,2.2482557972,2.248241912,2.248228083,2.2482143097,2.248200592,2.2481869294,2.2481733216,2.2481597682,2.2481462691,2.2481328237,2.2481194319,2.2481060933,2.2480928075,2.2480795743,2.2480663933,2.2480532643,2.2480401869,2.2480271608,2.2480141858,2.2480012615,2.2479883876,2.2479755639,2.24796279,2.2479500657,2.2479373906,2.2479247645,2.2479121871,2.2478996581,2.2478871773,2.2478747443,2.2478623589,2.2478500208,2.2478377298,2.2478254855,2.2478132877,2.2478011362,2.2477890307,2.2477769709,2.2477649565,2.2477529874,2.2477410632,2.2477291837,2.2477173486,2.2477055577,2.2476938108,2.2476821076,2.2476704479,2.2476588314,2.2476472578,2.247635727,2.2476242387,2.2476127927,2.2476013887,2.2475900265,2.2475787059,2.2475674267,2.2475561886,2.2475449913,2.2475338348,2.2475227187,2.2475116428,2.247500607,2.2474896109,2.2474786545,2.2474677374,2.2474568595,2.2474460205,2.2474352203,2.2474244586,2.2474137352,2.2474030499,2.2473924026,2.247381793,2.2473712209,2.2473606862,2.2473501885,2.2473397278,2.2473293038,2.2473189164,2.2473085653,2.2472982504,2.2472879714,2.2472777282,2.2472675206,2.2472573484,2.2472472115,2.2472371096,2.2472270425,2.2472170101,2.2472070123,2.2471970487,2.2471871193,2.2471772239,2.2471673623,2.2471575343,2.2471477397,2.2471379784,2.2471282503,2.2471185551,2.2471088927,2.2470992628,2.2470896655,2.2470801004,2.2470705674,2.2470610664,2.2470515972,2.2470421597,2.2470327536,2.2470233789,2.2470140353,2.2470047227,2.246995441,2.24698619,2.2469769695,2.2469677795,2.2469586197,2.24694949,2.2469403903,2.2469313203,2.2469222801,2.2469132693,2.2469042879,2.2468953358,2.2468864127,2.2468775186,2.2468686533,2.2468598167,2.2468510085,2.2468422288,2.2468334773,2.2468247539,2.2468160586,2.246807391,2.2467987512,2.2467901389,2.2467815541,2.2467729966,2.2467644663,2.2467559631,2.2467474868,2.2467390372,2.2467306144,2.2467222181,2.2467138482,2.2467055047,2.2466971872,2.2466888959,2.2466806305,2.2466723909,2.2466641769,2.2466559886,2.2466478256,2.246639688,2.2466315757,2.2466234884,2.2466154261,2.2466073886,2.2465993759,2.2465913879,2.2465834243,2.2465754852,2.2465675704,2.2465596797,2.2465518131,2.2465439705,2.2465361518,2.2465283567,2.2465205854,2.2465128375,2.2465051131,2.246497412,2.2464897341,2.2464820793,2.2464744475,2.2464668386,2.2464592525,2.2464516891,2.2464441483,2.24643663,2.246429134,2.2464216604,2.246414209,2.2464067796,2.2463993723,2.2463919868,2.2463846231,2.2463772812,2.2463699609,2.246362662,2.2463553846,2.2463481285,2.2463408937,2.2463336799,2.2463264873,2.2463193155,2.2463121647,2.2463050346,2.2462979252,2.2462908364,2.246283768,2.2462767201,2.2462696925,2.2462626852,2.246255698,2.2462487309,2.2462417837,2.2462348564,2.246227949,2.2462210612,2.2462141931,2.2462073446,2.2462005155,2.2461937058,2.2461869154,2.2461801442,2.2461733922,2.2461666592,2.2461599452,2.2461532501,2.2461465738,2.2461399162,2.2461332774,2.246126657,2.2461200552,2.2461134719,2.2461069069,2.2461003601,2.2460938315,2.2460873211,2.2460808287,2.2460743543,2.2460678978,2.2460614591,2.2460550381,2.2460486349,2.2460422492,2.246035881,2.2460295304,2.2460231971,2.2460168811,2.2460105823,2.2460043008,2.2459980363,2.2459917889,2.2459855584,2.2459793448,2.2459731481,2.2459669681,2.2459608048,2.2459546581,2.245948528,2.2459424144,2.2459363172,2.2459302363,2.2459241718,2.2459181234,2.2459120912,2.2459060752,2.2459000751,2.245894091,2.2458881228,2.2458821705,2.2458762339,2.2458703131,2.2458644079,2.2458585183,2.2458526442,2.2458467856,2.2458409424,2.2458351145,2.245829302,2.2458235046,2.2458177224,2.2458119554,2.2458062033,2.2458004663,2.2457947442,2.2457890369,2.2457833445,2.2457776668,2.2457720039,2.2457663555,2.2457607218,2.2457551026,2.2457494978,2.2457439075,2.2457383315,2.2457327699,2.2457272225,2.2457216892,2.2457161702,2.2457106652,2.2457051742,2.2456996972,2.2456942342,2.245688785,2.2456833497,2.2456779281,2.2456725202,2.245667126,2.2456617454,2.2456563784,2.2456510248,2.2456456848,2.2456403581,2.2456350448,2.2456297448,2.2456244581,2.2456191846,2.2456139242,2.2456086769,2.2456034427,2.2455982216,2.2455930133,2.245587818,2.2455826356,2.245577466,2.2455723091,2.245567165,2.2455620335,2.2455569147,2.2455518085,2.2455467148,2.2455416336,2.2455365648,2.2455315084,2.2455264644,2.2455214327,2.2455164133,2.2455114061,2.245506411,2.2455014281,2.2454964573,2.2454914985,2.2454865517,2.2454816169,2.245476694,2.2454717829,2.2454668837,2.2454619963,2.2454571206,2.2454522566,2.2454474043,2.2454425635,2.2454377344,2.2454329167,2.2454281106,2.2454233159,2.2454185327,2.2454137608,2.2454090002,2.2454042509,2.2453995128,2.245394786,2.2453900703,2.2453853658,2.2453806723,2.2453759899,2.2453713185,2.2453666581,2.2453620086,2.24535737,2.2453527423,2.2453481254,2.2453435192,2.2453389238,2.2453343391,2.2453297651,2.2453252017,2.2453206489,2.2453161066,2.2453115749,2.2453070537,2.2453025429,2.2452980425,2.2452935525,2.2452890728,2.2452846035,2.2452801444,2.2452756955,2.2452712568,2.2452668283,2.2452624099,2.2452580016,2.2452536034,2.2452492152,2.245244837,2.2452404687,2.2452361104,2.2452317619,2.2452274233,2.2452230946,2.2452187756,2.2452144663,2.2452101668,2.245205877,2.2452015968,2.2451973263,2.2451930653,2.245188814,2.2451845721,2.2451803397,2.2451761168,2.2451719033,2.2451676992,2.2451635045,2.2451593191,2.2451551431,2.2451509763,2.2451468187,2.2451426704,2.2451385312,2.2451344012,2.2451302803,2.2451261685,2.2451220658,2.2451179721,2.2451138874,2.2451098117,2.2451057449,2.245101687,2.245097638,2.2450935979,2.2450895666,2.2450855441,2.2450815303,2.2450775253,2.245073529,2.2450695414,2.2450655625,2.2450615921,2.2450576304,2.2450536772,2.2450497326,2.2450457965,2.2450418689,2.2450379497,2.245034039,2.2450301367,2.2450262427,2.2450223571,2.2450184799,2.2450146109,2.2450107502,2.2450068977,2.2450030535,2.2449992175,2.2449953896,2.2449915698,2.2449877582,2.2449839547,2.2449801592,2.2449763718,2.2449725923,2.2449688209,2.2449650574,2.2449613019,2.2449575542,2.2449538145,2.2449500826,2.2449463585,2.2449426423,2.2449389338,2.2449352331,2.2449315402,2.2449278549,2.2449241774,2.2449205075,2.2449168452,2.2449131906,2.2449095435,2.2449059041,2.2449022721,2.2448986477,2.2448950308,2.2448914214,2.2448878195,2.2448842249,2.2448806378,2.244877058,2.2448734856,2.2448699206,2.2448663629,2.2448628124,2.2448592693,2.2448557333,2.2448522046,2.2448486832,2.2448451689,2.2448416617,2.2448381617,2.2448346688,2.244831183,2.2448277043,2.2448242326,2.244820768,2.2448173104,2.2448138597,2.2448104161,2.2448069794,2.2448035496,2.2448001267,2.2447967106,2.2447933015,2.2447898992,2.2447865037];

function roundToUnits(value) {
    return ( (samevik.metric) ? Math.round(value) : (Math.round(value * 100) / 100) );
} // function roundToUnits(value)

function getXMLs(name, value) {
    var xml;
    if (value === null) {
        xml = "<" + name + " />\n";
    }
    else {
        xml = "<" + name + ">" + value + "</" + name + ">\n";
    }
    return xml;
} // function getXML(name, value)

function escapeXML(s) {
    if (s) {
        s = s.replace(/&/g,'&amp;');
        s = s.replace(/'/g,'&apos;');
        s = s.replace(/"/g,'&quot;');
        s = s.replace(/</g,'&lt;');
        s = s.replace(/>/g,'&gt;');
    }
    return s;
} // function escapeXML(s)

function unescapeXML(s) {
    if (s) {
        s = s.replace(/&apos;/g,"'");
        s = s.replace(/&quot;/g,'"');
        s = s.replace(/&lt;/g,'<');
        s = s.replace(/&gt;/g,'>');
        s = s.replace(/&amp;/g,'&');
    }
    return s;
} // function escapeXML(s)

function stripXMLSpecials(s) {
    if (s) {
        s = s.replace(/[&'"<>]/g,'');
    }
    return s;
} // stripXMLSpecials(s)



function getImageBase64(image) {
    /* var can = document.getElementById('saveCanvas');
    can.width = image.width;
    can.height = image.height;

    console.log("W = " + image.width);
    console.log("H = " + image.height);
    
    var con = canvas.getContext("2d");
    con.drawImage(image, 0, 0, image.width, image.height);

    return(can.toDataURL("image/png"));*/
    
    // display in main window to show progress
    canvas.width = image.width;
    canvas.height = image.height;

    console.log("W = " + image.width);
    console.log("H = " + image.height);
    
    context.drawImage(image, 0, 0, image.width, image.height);

    return(canvas.toDataURL("image/png"));    
} // function getImageBase64(image)

function valFromXMLnode(xmlnode, name, neednumber) {
    // var n = ;
    if ( (!xmlnode.getElementsByTagName(name)) || (!xmlnode.getElementsByTagName(name)[0].childNodes[0]) ) {
        console.log("fromXMLnode nonefound for " + name);
        return "";
    }
    // console.log("fromXMLnode getting " + name + " = " + xmlnode.getElementsByTagName(name)[0].childNodes[0].nodeValue); 
    if (neednumber) {
        return(parseFloat(xmlnode.getElementsByTagName(name)[0].childNodes[0].nodeValue));
    }
    else {
        return(xmlnode.getElementsByTagName(name)[0].childNodes[0].nodeValue);
    }
} // function valFromXMLnode(xmlnode, name)

function Shot(x, y) {
    this.x = x;
    this.y = y;
} // Shot constructor

function distBetween(shot1, shot2) {
    if (!shot1 || !shot2) { return false; }
    return Math.sqrt(
        (shot1.x - shot2.x) * (shot1.x - shot2.x) + 
        (shot1.y - shot2.y) * (shot1.y - shot2.y) ); 
} // function distBetween(shot1, shot2)

/*
    Group object definition
*/

function GroupStats() {
    this.m1 = null; // index of extreme pt 1
    this.m2 = null; // index of extreme pt 1
    this.es = 0;
    this.poix = null;
    this.poiy = null;
} // GroupStats constructor

function updateStatsGroup() {
    var i;
    var j;
    var max = 0;
    var dist = 0;
    var i1;
    var i2;
    var avgx = 0;
    var avgy = 0;
    
    if (this.shots.length < 2) {
        this.stats.m1 = null; // index of extreme pt 1
        this.stats.m2 = null; // index of extreme pt 1
        this.stats.es = 0;
        this.stats.poix = null;
        this.stats.poiy = null;
        return null;
    }
    
    for (i = 0; i < this.shots.length -1; i++) {
        avgx = avgx + this.shots[i].x;
        avgy = avgy + this.shots[i].y;
        for (j = i+1; j < this.shots.length; j++) {
            dist = distBetween(this.shots[i], this.shots[j]);
            if (dist > max) {
                max = dist;
                i1 = i;
                i2 = j;
            } // if bigger
        } // for j
    } // for i
    this.stats.m1 = i1;
    this.stats.m2 = i2;
    this.stats.es = max;
    avgx = (avgx + this.shots[this.shots.length -1].x) / this.shots.length;
    avgy = (avgy + this.shots[this.shots.length -1].y) / this.shots.length;
    this.stats.poix = avgx;
    this.stats.poiy = avgy;
    
    return true;
} // function updateGrpStats()

function toXMLGroup() {
    var result = "";
    var s = ""; // temporary
    
    result = result + getXMLs('cx', this.cx); 
    result = result + getXMLs('cy', this.cy);
    
    s = "";
    for (var i = 0; i < this.shots.length; i++) {
        s = s + getXMLs('shot', getXMLs('x', this.shots[i].x) + getXMLs('y', this.shots[i].y) ); 
    }
    result = result + s;

    return getXMLs('group', result); 
} // function toXMLGroup()

function fromXMLGroup(xml) {
    this.cx = valFromXMLnode(xml, 'cx', true);
    this.cy = valFromXMLnode(xml, 'cy', true);

    var shotsxml = xml.getElementsByTagName("shot");
    for (var i = 0; i < shotsxml.length; i++)
    {
        var addshot = new Shot(
            valFromXMLnode(shotsxml[i], 'x', true),
            valFromXMLnode(shotsxml[i], 'y', true) );
        this.shots.push(addshot);
    }
} // function fromXMLGroup(xml)

function Group() {
    this.cx = null;
    this.cy = null;
    this.shots = new Array();
    this.stats = new GroupStats();
    this.updateStats = updateStatsGroup;
    this.toXML = toXMLGroup;
    this.fromXML = fromXMLGroup;
} // Group constructor

/*
    Sheet (target) object definition
*/

function updateStatsSheet() {
    for (var i = 0; i < this.groups.length; i++) {
        this.groups[i].updateStats();
    }
} // updateStatsSheet()

function toXMLSheet() {
    var result = "";
    var s = ""; // temporary
    
    result = result + getXMLs('name', escapeXML(this.name)); 
    result = result + getXMLs('description', escapeXML(this.description));
    result = result + getXMLs('scalept1', getXMLs('x', this.scalept1.x) + getXMLs('y', this.scalept1.y) );
    result = result + getXMLs('scalept2', getXMLs('x', this.scalept2.x) + getXMLs('y', this.scalept2.y) );
    result = result + getXMLs('scale', this.scale);
    result = result + getXMLs('scalelen', this.scalelen);
    s = "";
    for (var i = 0; i < this.groups.length; i++) {
        s = s + this.groups[i].toXML(); 
    }
    result = result + s;
    result = result + getXMLs('image', getImageBase64(this.image));
    return getXMLs('sheet', result);
} // function toXMLSheet()

function fromXMLSheet(xml) {
    this.name = unescapeXML(valFromXMLnode(xml, "name"));
    this.description = unescapeXML(valFromXMLnode(xml, "description"));
    
    this.scale = valFromXMLnode(xml, "scale", true);
    this.scalelen = valFromXMLnode(xml, "scalelen", true);

    var sptxml = xml.getElementsByTagName("scalept1")[0];
    this.scalept1 = new Shot(valFromXMLnode(sptxml, "x", true), valFromXMLnode(sptxml, "y", true));
    var sptxml = xml.getElementsByTagName("scalept2")[0];
    this.scalept2 = new Shot(valFromXMLnode(sptxml, "x", true), valFromXMLnode(sptxml, "y", true));
    
    var groupsxml = xml.getElementsByTagName("group");
    for (var i = 0; i < groupsxml.length; i++)
    {
        var addgroup = new Group(null, null);
        addgroup.fromXML(groupsxml[i]);
        this.groups.push(addgroup);
    }
    
    this.image = new Image();
    // below loads asynchronously, may be problematic to display
    // imemdiately; need onload handlers 
    console.log("about to get img...");
    this.image.onload = function (e) {
        console.log("img got loaded");
        imgloading_current = imgloading_current + 1;
        setElementText('project-info-string', 'Loading image ' + imgloading_current + ' of ' + imgloading_total);
        displayTargetsInfo();
        if (imgloading_current == imgloading_total) { displayProjectInfo(); }
        // context.drawImage(i, 0, 0, canvas.width, canvas.height);
    }

    // console.log("img XML = " + xml.getElementsByTagName("image")[0].nodeValue);

    // Chrome parser crashes on 5MB BASE64 nodeValue and returns null
    var imgb64 = (new XMLSerializer()).serializeToString(xml.getElementsByTagName("image")[0]);
    imgb64 = imgb64.substr(7, imgb64.length-15); // strip opening and closing tags
    // console.log(imgb64);
    // this.image.src = xml.getElementsByTagName("image")[0].nodeValue;
    this.image.src = imgb64;
    imgloading_total = imgloading_total + 1;
    setElementText('project-info-string', 'Loading image ' + imgloading_current + ' of ' + imgloading_total);
    // console.log("got img...");
} // function fromXMLSheet(xml)

function Sheet(filename, imgobj) {
    this.name = filename;
    this.image = imgobj;
    this.description = "";
    this.scalept1 = new Shot(-1,-1);
    this.scalept2 = new Shot(-1,-1);
    this.scale = 0;
    this.scalelen = 0;
    this.groups = new Array();
    this.updateStats = updateStatsSheet;
    this.toXML = toXMLSheet;
    this.fromXML = fromXMLSheet;
} // Sheet constructor

/*
    Project object definition
*/

function toXMLSamevik() {
    var result = "";
    var s = ""; // temporary
    
    result = result + getXMLs('description', escapeXML(this.description));
    result = result + ( (this.metric) ? getXMLs('metric', 'true') : getXMLs('metric', 'false') );
    result = result + getXMLs('cal', this.cal);
    result = result + getXMLs('dist', this.dist);
    s = "";
    for (var i = 0; i < this.sheets.length; i++) {
        s = s + this.sheets[i].toXML(); 
    }
    result = result + s;
    return getXMLs('samevik', result);
} // function toXMLSamevik()

function fromXMLSamevik(xml) {
    var rootnode = xml.documentElement;
    console.log(rootnode.nodeName + " = " + rootnode.nodeValue);
    this.description = unescapeXML(valFromXMLnode(rootnode,'description'));
    this.metric = (valFromXMLnode(rootnode,'metric') == 'true');
    this.cal = valFromXMLnode(rootnode,'cal', true);
    this.dist = valFromXMLnode(rootnode,'dist', true);
    
    imgloading_current = 0;
    imgloading_total = 0;
    var sheetsxml = rootnode.getElementsByTagName("sheet");
    for (var i = 0; i < sheetsxml.length; i++)
    {
        var addsheet = new Sheet(null, null);
        addsheet.fromXML(sheetsxml[i]);
        this.sheets.push(addsheet);
    }
    this.updateStats();
    // this.synthStats();
    // this.makeCombinedSVG();
    synthSVG = new SynthSVG(document.getElementById('svgcan'));
} // function fromXMLSamevik()

function updateStatsSamevik() {
    for (var i = 0; i < this.sheets.length; i++) {
        this.sheets[i].updateStats();
    }
} // function updateStatsSamevik()

function synthStats() {
    var avgx = 0;
    var avgy = 0;
    var shotcount = 0;

    this.pts = new Array();
    
    // assemble all points scaled to real units and calculate the average POI
    for (var i = 0; i < this.sheets.length; i++) {
        for (var j = 0; j < this.sheets[i].groups.length; j++) {
            for (var k = 0; k < this.sheets[i].groups[j].shots.length; k++){
                var x = (this.sheets[i].groups[j].shots[k].x - this.sheets[i].groups[j].cx) / this.sheets[i].scale;
                var y = (this.sheets[i].groups[j].shots[k].y - this.sheets[i].groups[j].cy) / this.sheets[i].scale;
                this.pts.push(new Shot(x, y));
                this.ptstg.push({ t: i, g: j});
                shotcount++;
                avgx = avgx + x;
                avgy = avgy + y;
            } // shots loop
        } // groups loop
    } // sheets loop
    
    if (shotcount < 3) { return false; } // nothing to synth
    
    if (shotcount > 1000) {
        return false;
    } // too many shots;
    // FIXME: get [logarithmic] gamma and inverse chi-square
    // algorithmically
    
    this.poi.x = avgx / shotcount;
    this.poi.y = avgy / shotcount;
    
    console.log('shotcount = ' + shotcount);
    console.log('synth poi = ' + this.poi.x + ' : ' + this.poi.y);
    
    // calculate variance (and enclosing box, while we're at it)
    var vx = 0;
    var vy = 0;
    for (var i = 0; i < this.pts.length; i++) {
        var dx = this.pts[i].x - this.poi.x; 
        var dy = this.pts[i].y - this.poi.y;
        if (dx < this.boxlo.x) { this.boxlo.x = dx; }
        if (dy < this.boxlo.y) { this.boxlo.y = dy; }
        if (dx > this.boxhi.x) { this.boxhi.x = dx; }
        if (dy > this.boxhi.y) { this.boxhi.y = dy; }
        vx = vx + dx * dx; 
        vy = vy + dy * dy;
    }
    vx = vx / (shotcount-1); // biased
    vy = vy / (shotcount-1);
    var v = (vx + vy) / 2;

    console.log('variance = ' + v);

    // finally get sigma
    this.sigma = RAYLEIGH_COEFF[shotcount] * Math.sqrt(v);
    this.confidenceLower = RAYLEIGH_COEFF[shotcount] * Math.sqrt(CONF_LOWER[shotcount] * v) / this.sigma; 
    this.confidenceUpper = RAYLEIGH_COEFF[shotcount] * Math.sqrt(CONF_UPPER[shotcount] * v) / this.sigma; 
    console.log('sigma = ' + this.sigma + " confidence = [" + this.confidenceLower + " .. " + this.confidenceUpper + "]");
    
    // get CIs for POI
    var tdistc = TDIST_QUANTILE[shotcount] / Math.sqrt(shotcount)
    this.poici.x = Math.sqrt(vx) * tdistc;
    this.poici.y = Math.sqrt(vy) * tdistc;
    
    synthSVG.makeAll();
} // function synthStats()

function printUnit(value) {
    if (this.metric) {
        return (value.toFixed(1));
    }
    else {
        return (value.toFixed(2));
    }
} // function printUnit(value)

function printInMOA(value) {
    var s;
    if (this.metric) {
        s = value / (0.2908 * samevik.dist);
    }
    else {
        s = value / (0.01047 * samevik.dist);
    }
    // return (Math.round(s * 100) / 100);
    return (s.toFixed(2));
} // function printInMOA(value)

function printInMrad(value) {
    var s;
    if (this.metric) {
        s = value / (0.1 * samevik.dist);
    }
    else {
        s = value / (0.00361 * samevik.dist);
    }
    // return (Math.round(s * 100) / 100);
    return (s.toFixed(2));
} // function printInMrad(value)

function printLength(value) {
    return ("" + this.printUnit(value) + ((this.metric) ? (LSTX('mm')) : ('"')) );
} // function printLength(value)

function printDist(value) {
    return ("" + Math.round(value) + ((this.metric) ? (LSTX('m')) : (LSTX('yards'))) );
} // function printLength(value)

function Samevik() {
    this.description = "";
    this.metric = true;
    this.cal = 0;
    this.dist = 0;
    this.sheets = new Array();
    // synthetic stats, all coordinates in real units, NOT px
    this.pts = new Array(); // of Shot objects
    this.ptstg = new Array(); // of target-group pairs where pts belong
    this.poi = new Shot(0,0); // average POI
    this.poici = new Shot(0,0); // confidence intervals for average POI
    this.boxlo = new Shot(0,0); // rectangle "box" containing all shots
    this.boxhi = new Shot(0,0); // Nota bene: box coordinates are relative to POI
    this.sigma = 0; // dispersion
    this.confidenceLower = 0; // 95% confidence interval
    this.confidenceUpper = 0;
    // this.combinedSVG = ''; // SVG string representing the combined image

    // methods
    this.toXML = toXMLSamevik;
    this.fromXML = fromXMLSamevik;
    this.updateStats = updateStatsSamevik;
    this.synthStats = synthStats;
    this.printUnit = printUnit;
    this.printLength = printLength;
    this.printDist = printDist;
    this.printInMOA = printInMOA;
    this.printInMrad = printInMrad;
    // this.makeCombinedSVG = makeCombinedSVG;
    
    // initialise the global synthSVG object
    synthSVG = new SynthSVG(document.getElementById('svgcan'));
} // Samevik constructor

